JOBS & CRON-JOBS

There are service like batch operations or reporting which are managed to run just once and then stop.

All of this are workloads which are meant to live for a short period of time.

Let's see how this concept works in Docker and then we will see how it works on k8s

 . docker run ubuntu expr 3 + 2


The docker container goes up, compute the operation and then exit.

Let's try to do the same thing with k8s

pod.yml

apiVersion: v1
kind: Pod
metadata:
	name: math-pod
spec:
	containers:
		- name: math-add
		  image: ubuntu
		  command: ['expr', '3', '+', '2']


Since the Pod are meant to live, what happens is that the container is build up, compute the addition, exit and then k8s restarts it again, and again ecc...
This continues to happened until the threshold is reached.

This behaviour is set on the restartPolicy behaviour which is set to Always by default.


apiVersion: v1
kind: Podld
metadata:
	name: math-pod
spec:
	containers:
		- name: math-add
		  image: ubuntu
		  command: ['expr', '3', '+', '2']
	restartPolicy: Always



If you set the policy to 'Never' k8s wan't try to restart the container once is exited. 


Now let's try to focus on a reporting,
There is a really big dataSet that requires multiple pods to process the data in parallel  You want that each pod makes exctly what was scheduled to do and then exit.
For this a manager that is responsible to create how many pods as we want and be sure that the works is done successfully.


A JOB is similar to a ReplicaSet but, the ReplicaSet is responsible to have a certain number of pods running and living, a Job is responsible to have a certain number of pods doing a specific task and then
exit.


apiVersion: batch/v1
kind: Job
metadata:
	name: math-add-job
spec:
	template:
		spec:
			containers:
				- name: math-add
				  image: ubuntu
				  command: ['expr', '3', '+', '2']
			restartPolicy: Never

Once done create a new job using the 
 . kubectl create -f job-definition.yml


You can see the jobs created by doing:
 . kubectl get jobs

If you do kubectl get pods you will see something like this;


NAME			READY		STATUS 		RESTARTS
math-add		0/1		Completed		0


Perfect but how about the output. If the output is in the log, just type
k logs math-add-job to see it.


To delete the job run the delete job command.
 . k delete job math-add-job
This will delete all the pods related to the job.

To run multipler pods just add a completions:

apiVersion: batch/v1
kind: Job
metadata:
	name: math-add-job
spec:
	completions: 3
	template:
		spec:
			containers:
				- name: math-add
				  image: ubuntu
				  command: ['expr', '3', '+', '2']
			restartPolicy: Never

By default the pods are created one after the other, so the second one will be created only when the first one is finished

What if some pod failed?
In that case the Job continue to create Pod until the completion is reached
So for example if you have a completion of 3 the following situation could happened:

Completed
Error
Completed
Error
Error
Completed

So it created at the end 6 pods in order to have 3 completed, so it continue to create pod until it has 3 completed.

If you want to run 3 pods in parallel just add the parallelism option:


apiVersion: batch/v1
kind: Job
metadata:
	name: math-add-job
spec:
	completions: 3
	parallelism: 3
	template:
		spec:
			containers:
				- name: math-add
				  image: ubuntu
				  command: ['expr', '3', '+', '2']
			restartPolicy: Never

In that case k8s will create 3 pods in parallel, if someone failed is intelligent enough to run one pod at a time until completed

Completed Error Completed
Error
Error
Completed

A CRON-JOB is a Job which can be scheduled.
For example a job which makes a report and then an email


Let's start with file yml defintion

apiVersion: batch/v1beta
kind: CronJob
metadata:
	name: reporting-cron-job
spec:
	schedule: "*/1 * * * *"
	jobTemplate:
		spec:
			completions: 3
			parallelism: 3
			template:
				spec:
					containers:
						- name: reporting-tool
				  		  image: reporting-tool
				  		  command: ['expr', '3', '+', '2']
					restartPolicy: Never


Create simply with the file and then type:
 . k get cronjob

